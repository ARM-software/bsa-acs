name: BSA-ACS UEFI application build

on:
  push:
    branches:                # trigger on push to master
      - main
  pull_request:              # trigger on pull requests to master
    branches:
      - main
  schedule:
    - cron: '30 17 * * *'    # Runs everyday at 11 PM IST (17:30 UTC)
  workflow_dispatch:         # to dispatch from Github Actions

jobs:
  build_acpi:
    name: BSA-ACS UEFI build for ACPI target
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y git build-essential nasm

      - name: Download edk2 and its submodules
        run: |
          git clone --recursive --branch edk2-stable202208 https://github.com/tianocore/edk2
          git clone https://github.com/tianocore/edk2-libc edk2/edk2-libc

      - name: Checkout bsa-acs repository
        uses: actions/checkout@v3
        with:
          path: 'edk2/ShellPkg/Application/bsa-acs'

      - name: Apply edk2 BSA patch for ACPI target
        run: |
          cd edk2
          git apply ShellPkg/Application/bsa-acs/patches/edk2-202208-bsa-acpi.diff

      - name: Download Arm GCC cross-compiler
        run: |
          mkdir -p /opt/cross
          cd /opt/cross
          wget https://developer.arm.com/-/media/Files/downloads/gnu-a/10.3-2021.07/binrel/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar.xz

      - name: Set up EDK2 environment and build Bsa.efi
        run: |
          cd edk2
          export GCC49_AARCH64_PREFIX=/opt/cross/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          export PACKAGES_PATH=$PWD/edk2-libc
          source edksetup.sh
          make -C BaseTools/Source/C
          source ShellPkg/Application/bsa-acs/tools/scripts/acsbuild.sh
      - name: Save Bsa.efi as an artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Bsa_acpi_target.efi
          path: edk2/Build/Shell/DEBUG_GCC49/AARCH64/Bsa.efi
          if-no-files-found: error

  build_dt:
    name: BSA-ACS UEFI build for DT target
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y git build-essential nasm

      - name: Download edk2 and its submodules
        run: |
          git clone --recursive --branch edk2-stable202208 https://github.com/tianocore/edk2
          git clone https://github.com/tianocore/edk2-libc edk2/edk2-libc

      - name: Checkout bsa-acs repository
        uses: actions/checkout@v3
        with:
          path: 'edk2/ShellPkg/Application/bsa-acs'

      - name: Apply edk2 BSA patch for DT target
        run: |
          cd edk2
          git apply ShellPkg/Application/bsa-acs/patches/edk2-202208-bsa-dt.diff

      - name: Download Arm GCC cross-compiler
        run: |
          mkdir -p /opt/cross
          cd /opt/cross
          wget https://developer.arm.com/-/media/Files/downloads/gnu-a/10.3-2021.07/binrel/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar.xz

      - name: Set up EDK2 environment and build Bsa.efi
        run: |
          cd edk2
          export GCC49_AARCH64_PREFIX=/opt/cross/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          export PACKAGES_PATH=$PWD/edk2-libc
          source edksetup.sh
          make -C BaseTools/Source/C
          source ShellPkg/Application/bsa-acs/tools/scripts/acsbuild.sh
      - name: Save Bsa.efi as an artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Bsa_dt_target.efi
          path: edk2/Build/Shell/DEBUG_GCC49/AARCH64/Bsa.efi
          if-no-files-found: error
